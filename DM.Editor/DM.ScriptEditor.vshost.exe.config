<?xml version="1.0" encoding="utf-8"?>
<configuration>
  
  <configSections>
    <section name="BitFactory.Logging" type="BitFactory.Logging.Configuration.LoggingSection, BitFactory.Logging"/>
    <section name="DispatchManager.QueueConnections" type="DM.Library.QueueConnectionSection, DM.Library"/>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>

    <!-- Generic queue definition section -->
    <section name="Scripting.QueueConnections" type="DM.Library.ScriptingQueueConnectionsSection, DM.Library"/>

  </configSections>
  
  <connectionStrings>

    <!-- AiDB Connection string is used for the dispatch messages -->
    <!-- add name="AiDb" connectionString="Data Source=(localdb)\ProjectsV13;Initial Catalog=AiLDb;Integrated Security=true;" providerName="System.Data.SqlClient"/ -->
    <add name="AiDb" connectionString="Data Source=..\AilDb.sdf;Max Database Size=4000;Persist Security Info=False;" providerName="System.Data.SqlServerCe.4.0"/>

  </connectionStrings>
  
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb"/>
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer"/>
    </providers>
  </entityFramework>

  
  
  <appSettings>
    <!-- Ail Schema Namespace -->
    <add key="SchemaUser" value="MES"/>
    
    <!-- Dispatch Manager Application Server -->
    <add key="DispatchManagerAppServer" value="http://osw-rmdev.novelis.biz:8000"/>

    <!-- ************* QUEUE DEFINITION ****************************************************** -->
    <!-- All queue names and server connections are detailed in the Connection String settings -->
    <!-- Queuing library to use: Debugging queue library which will serialize messages to disk -->
    <!-- Development test queue -->
    <add key="QueueLibrary" value="DM.Library.MessageQ.MsMqClient,DM.Library"/>

    <!-- This has to be an absolute path -->
    <add key="AssemblyReferenceFolders" value=""/>
    
    <add key="AssemblyReferences" value=""/>
    <add key="ScriptNamespaces" value="System.Linq,System.Windows.Forms"/>

  </appSettings>

   <Scripting.QueueConnections>
    <Queues>

      <Queue name="MES_PDI"
            clientClass="DM.Library.MessageQ.MsMqClient,DM.Library"
            serverClass="DM.Library.MessageQ.MsMqDataSource,DM.Library">
        <Parameters>
          <Parameter name="queueName" value="pdi_q"/>
          <Parameter name="queuePath" value="FormatName:Direct=OS:.\private$\pdi_q"/>
          <Parameter name="formatterType" value="Binary"/>

          <!-- Possible values that would define a message location
                  msmq:label = default if blank
                  msmq:defaultMessage = use defaultMessage from the file
                  json:<path>
                  xml:<path>
            -->
          <Parameter name="messageTypePath" value="json:Header.MessageName"/>
          <Parameter name="defaultMessage" value="MES_PDI_Unknown_Message"/>
          <Parameter name="isTransactional" value="True"/>
        </Parameters>
      </Queue>

      <Queue name="MES_PDO"
       clientClass="DM.Library.MessageQ.MsMqClient,DM.Library"
       serverClass="">
        <Parameters>
          <Parameter name="queueName" value="l2_message_q"/>
          <Parameter name="queuePath" value="FormatName:Direct=OS:.\private$\l2_message_q"/>
          <Parameter name="formatterType" value="Xml"/>
          <Parameter name="messageTypePath" value="json:Header.MessageName"/>
          <Parameter name="defaultMessage" value="MES_PDO_Unknown_Message"/>
          <Parameter name="isTransactional" value="True"/>
        </Parameters>
      </Queue>
      
    </Queues>

  </Scripting.QueueConnections>
  
  <!-- ********************** APPLICATION LOGGING **************************************** -->
  <BitFactory.Logging name="global" xmlns="http://BitFactory.Logging">
    <compositeLoggers>
      <compositeLogger name="GlobalRollingFiles" isAsynchronous="true">

        <rollingDateFileLoggers>
          <rollingDateFileLogger name="myRollingFileLogger1" isEnabled="true" formattedFileName="Editor_{timestamp:yyyyMMdd}.log" maxFilesToKeep="10" autoDelete="true" severity="Debug"/>
        </rollingDateFileLoggers>

      </compositeLogger>
    </compositeLoggers>
  </BitFactory.Logging>
  
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6"/></startup></configuration>
